// SPDX-License-Identifier: MIT
var inputs=[{name:'param',description:'Parameters of Export.*.toAsset()', type:'object',optional:false}];
            
var reference={name:'loadIfExistElseExport',license:'MIT', description:'Same as Export.*.toAsset, but do not export and load if the asset already exists, else export using the same parameters as Export.*.toAsset(...).', contributors:['Mathieu Gravey']};

exports.createDocumentation=function(){ return {inputs:inputs, reference:reference};}

exports.createFunction=function(internal,relPath){
return function(){
    var inputDictionary=internal.readInputs(Array.prototype.slice.call(arguments,0),inputs,reference,relPath);
    internal.addRef(reference,relPath);
    
    if(inputDictionary.image){ // image export
      try{
        var im=ee.Image(data.assetId);
        ee.data.computeValue(im);
        return im;
      }
      catch(e){
        Export.image.toAsset(data);
        return data.image;
      }
    }
    
    if(inputDictionary.collection){// is table
      try{
        var ftC=ee.FeatureCollection(data.assetId);
        ee.data.computeValue(ftC);
        return ftC;
      }
      catch(e){
        Export.table.toAsset(data);
        return data.collection;
      }
    }

    //do whatever
    return null;
  }
}
