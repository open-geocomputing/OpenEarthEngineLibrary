var libs={Element: {addTimeProperties: require('users/OEEL/lib:/Element/addTimeProperties')}, debug: {Terminal: require('users/OEEL/lib:/debug/Terminal')}, util: {addTimePrototype: require('users/OEEL/lib:/util/addTimePrototype')}, Image: {arrayMatrixUnit: require('users/OEEL/lib:/Image/arrayMatrixUnit'), inverseDistanceInterpolation: require('users/OEEL/lib:/Image/inverseDistanceInterpolation'), kriging: require('users/OEEL/lib:/Image/kriging'), semivariogram: require('users/OEEL/lib:/Image/semivariogram'), propertyAsBand: require('users/OEEL/lib:/Image/propertyAsBand'), arrayDTW: require('users/OEEL/lib:/Image/arrayDTW')}, plotly: {scatter: require('users/OEEL/lib:/plotly/scatter'), barChart: require('users/OEEL/lib:/plotly/barChart'), histogram: require('users/OEEL/lib:/plotly/histogram'), plot: require('users/OEEL/lib:/plotly/plot'), directDraw: require('users/OEEL/lib:/plotly/directDraw'), donutChart: require('users/OEEL/lib:/plotly/donutChart'), sankeyDiagram: require('users/OEEL/lib:/plotly/sankeyDiagram'), hist2D: require('users/OEEL/lib:/plotly/hist2D')}, Filter: {asymmetricMaxDifference: require('users/OEEL/lib:/Filter/asymmetricMaxDifference')}, FeatureCollection: {fromList: require('users/OEEL/lib:/FeatureCollection/fromList')}, Date: {sunRiseSet: require('users/OEEL/lib:/Date/sunRiseSet'), sunPosition: require('users/OEEL/lib:/Date/sunPosition')}, Array: {matrixUnit: require('users/OEEL/lib:/Array/matrixUnit'), dtwDistance: require('users/OEEL/lib:/Array/dtwDistance')}, Map: {scaleLayer: require('users/OEEL/lib:/Map/scaleLayer'), scaleWidget: require('users/OEEL/lib:/Map/scaleWidget'), mapshot: require('users/OEEL/lib:/Map/mapshot'), symbol: require('users/OEEL/lib:/Map/symbol')}, Algorithms: {Sentinel1: {removeS1BlackBorders: require('users/OEEL/lib:/Algorithms/Sentinel1/removeS1BlackBorders')}, Sentinel2: {cloudfree: require('users/OEEL/lib:/Algorithms/Sentinel2/cloudfree')}, MODIS: {terrainShadow: require('users/OEEL/lib:/Algorithms/MODIS/terrainShadow')}}, Geometry: {geometryWorldwide: require('users/OEEL/lib:/Geometry/geometryWorldwide'), fromText: require('users/OEEL/lib:/Geometry/fromText')}, data: {deleteImageCollection: require('users/OEEL/lib:/data/deleteImageCollection')}, ImageCollection: {OtsuThreshold: require('users/OEEL/lib:/ImageCollection/OtsuThreshold'), medoid: require('users/OEEL/lib:/ImageCollection/medoid'), fromSingleImage: require('users/OEEL/lib:/ImageCollection/fromSingleImage'), SavatskyGolayFilter: require('users/OEEL/lib:/ImageCollection/SavatskyGolayFilter'), toArrayPerBandWithMask: require('users/OEEL/lib:/ImageCollection/toArrayPerBandWithMask'), enhancingCollection: require('users/OEEL/lib:/ImageCollection/enhancingCollection'), movingWindow: require('users/OEEL/lib:/ImageCollection/movingWindow')}, Feature: {asLabel: require('users/OEEL/lib:/Feature/asLabel')}, Python: {require: require('users/OEEL/lib:/Python/require'), run: require('users/OEEL/lib:/Python/run')}, Export: {Image: {toAsset: require('users/OEEL/lib:/Export/Image/toAsset'), toDrive: require('users/OEEL/lib:/Export/Image/toDrive')}, loadIfExistElseExport: require('users/OEEL/lib:/Export/loadIfExistElseExport'), ImageCollection: {asImageToAsset: require('users/OEEL/lib:/Export/ImageCollection/asImageToAsset'), toAsset: require('users/OEEL/lib:/Export/ImageCollection/toAsset'), toDrive: require('users/OEEL/lib:/Export/ImageCollection/toDrive'), create: require('users/OEEL/lib:/Export/ImageCollection/create')}}, internal: require('users/OEEL/lib:/internal')}

//generated automatically the 2025-04-06 19:06:53.675689UTC 

exports=libs.internal.setupLibrary(libs);

exports.type="Open Earth Engine Library\nRelease date: 2025-04-06 19:06:53\nPlease refer to the online documentation:\nhttps://www.open-geocomputing.org/OEEL"