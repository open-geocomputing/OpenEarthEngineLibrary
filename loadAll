var libs={plotly: {donutChart: require('users/OEEL/lib:/plotly/donutChart'), hist2D: require('users/OEEL/lib:/plotly/hist2D'), plot: require('users/OEEL/lib:/plotly/plot'), histogram: require('users/OEEL/lib:/plotly/histogram'), barChart: require('users/OEEL/lib:/plotly/barChart'), scatter: require('users/OEEL/lib:/plotly/scatter'), directDraw: require('users/OEEL/lib:/plotly/directDraw')}, Element: {addTimeProperties: require('users/OEEL/lib:/Element/addTimeProperties')}, Export: {loadIfExistElseExport: require('users/OEEL/lib:/Export/loadIfExistElseExport'), Image: {toDrive: require('users/OEEL/lib:/Export/Image/toDrive'), toAsset: require('users/OEEL/lib:/Export/Image/toAsset')}, ImageCollection: {create: require('users/OEEL/lib:/Export/ImageCollection/create'), toDrive: require('users/OEEL/lib:/Export/ImageCollection/toDrive'), asImageToAsset: require('users/OEEL/lib:/Export/ImageCollection/asImageToAsset'), toAsset: require('users/OEEL/lib:/Export/ImageCollection/toAsset')}}, Algorithms: {Sentinel2: {cloudfree: require('users/OEEL/lib:/Algorithms/Sentinel2/cloudfree')}, MODIS: {terrainShadow: require('users/OEEL/lib:/Algorithms/MODIS/terrainShadow')}, Sentinel1: {removeS1BlackBorders: require('users/OEEL/lib:/Algorithms/Sentinel1/removeS1BlackBorders')}}, data: {deleteImageCollection: require('users/OEEL/lib:/data/deleteImageCollection')}, Map: {mapshot: require('users/OEEL/lib:/Map/mapshot'), scaleLayer: require('users/OEEL/lib:/Map/scaleLayer'), symbol: require('users/OEEL/lib:/Map/symbol'), scaleWidget: require('users/OEEL/lib:/Map/scaleWidget')}, Array: {matrixUnit: require('users/OEEL/lib:/Array/matrixUnit'), dtwDistance: require('users/OEEL/lib:/Array/dtwDistance')}, Filter: {asymmetricMaxDifference: require('users/OEEL/lib:/Filter/asymmetricMaxDifference')}, FeatureCollection: {fromList: require('users/OEEL/lib:/FeatureCollection/fromList')}, Image: {arrayDTW: require('users/OEEL/lib:/Image/arrayDTW'), semivariogram: require('users/OEEL/lib:/Image/semivariogram'), kriging: require('users/OEEL/lib:/Image/kriging'), propertyAsBand: require('users/OEEL/lib:/Image/propertyAsBand'), arrayMatrixUnit: require('users/OEEL/lib:/Image/arrayMatrixUnit'), inverseDistanceInterpolation: require('users/OEEL/lib:/Image/inverseDistanceInterpolation')}, Feature: {asLabel: require('users/OEEL/lib:/Feature/asLabel')}, util: {addTimePrototype: require('users/OEEL/lib:/util/addTimePrototype')}, debug: {Terminal: require('users/OEEL/lib:/debug/Terminal')}, Geometry: {fromText: require('users/OEEL/lib:/Geometry/fromText'), geometryWorldwide: require('users/OEEL/lib:/Geometry/geometryWorldwide')}, ImageCollection: {movingWindow: require('users/OEEL/lib:/ImageCollection/movingWindow'), enhancingCollection: require('users/OEEL/lib:/ImageCollection/enhancingCollection'), SavatskyGolayFilter: require('users/OEEL/lib:/ImageCollection/SavatskyGolayFilter'), toArrayPerBandWithMask: require('users/OEEL/lib:/ImageCollection/toArrayPerBandWithMask'), medoid: require('users/OEEL/lib:/ImageCollection/medoid'), OtsuThreshold: require('users/OEEL/lib:/ImageCollection/OtsuThreshold'), fromSingleImage: require('users/OEEL/lib:/ImageCollection/fromSingleImage')}, internal: require('users/OEEL/lib:/internal')}

//generated automatically the 2023-07-06 21:04:48.156058UTC 

exports=libs.internal.setupLibrary(libs);