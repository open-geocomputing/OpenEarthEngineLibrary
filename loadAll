var libs={Export: {loadIfExistElseExport: require('users/OEEL/lib:/Export/loadIfExistElseExport'), Image: {toAsset: require('users/OEEL/lib:/Export/Image/toAsset'), toDrive: require('users/OEEL/lib:/Export/Image/toDrive')}, ImageCollection: {create: require('users/OEEL/lib:/Export/ImageCollection/create'), asImageToAsset: require('users/OEEL/lib:/Export/ImageCollection/asImageToAsset'), toAsset: require('users/OEEL/lib:/Export/ImageCollection/toAsset'), toDrive: require('users/OEEL/lib:/Export/ImageCollection/toDrive')}}, Map: {symbol: require('users/OEEL/lib:/Map/symbol'), scaleWidget: require('users/OEEL/lib:/Map/scaleWidget'), mapshot: require('users/OEEL/lib:/Map/mapshot'), scaleLayer: require('users/OEEL/lib:/Map/scaleLayer')}, data: {deleteImageCollection: require('users/OEEL/lib:/data/deleteImageCollection')}, Array: {dtwDistance: require('users/OEEL/lib:/Array/dtwDistance'), matrixUnit: require('users/OEEL/lib:/Array/matrixUnit')}, Filter: {asymmetricMaxDifference: require('users/OEEL/lib:/Filter/asymmetricMaxDifference')}, plotly: {sankeyDiagram: require('users/OEEL/lib:/plotly/sankeyDiagram'), scatter: require('users/OEEL/lib:/plotly/scatter'), donutChart: require('users/OEEL/lib:/plotly/donutChart'), histogram: require('users/OEEL/lib:/plotly/histogram'), barChart: require('users/OEEL/lib:/plotly/barChart'), directDraw: require('users/OEEL/lib:/plotly/directDraw'), hist2D: require('users/OEEL/lib:/plotly/hist2D'), plot: require('users/OEEL/lib:/plotly/plot')}, Feature: {asLabel: require('users/OEEL/lib:/Feature/asLabel')}, util: {addTimePrototype: require('users/OEEL/lib:/util/addTimePrototype')}, Algorithms: {Sentinel1: {removeS1BlackBorders: require('users/OEEL/lib:/Algorithms/Sentinel1/removeS1BlackBorders')}, MODIS: {terrainShadow: require('users/OEEL/lib:/Algorithms/MODIS/terrainShadow')}, Sentinel2: {cloudfree: require('users/OEEL/lib:/Algorithms/Sentinel2/cloudfree')}}, Element: {addTimeProperties: require('users/OEEL/lib:/Element/addTimeProperties')}, FeatureCollection: {fromList: require('users/OEEL/lib:/FeatureCollection/fromList')}, Python: {require: require('users/OEEL/lib:/Python/require'), run: require('users/OEEL/lib:/Python/run')}, debug: {Terminal: require('users/OEEL/lib:/debug/Terminal')}, Geometry: {geometryWorldwide: require('users/OEEL/lib:/Geometry/geometryWorldwide'), fromText: require('users/OEEL/lib:/Geometry/fromText')}, Image: {propertyAsBand: require('users/OEEL/lib:/Image/propertyAsBand'), arrayMatrixUnit: require('users/OEEL/lib:/Image/arrayMatrixUnit'), semivariogram: require('users/OEEL/lib:/Image/semivariogram'), inverseDistanceInterpolation: require('users/OEEL/lib:/Image/inverseDistanceInterpolation'), kriging: require('users/OEEL/lib:/Image/kriging'), arrayDTW: require('users/OEEL/lib:/Image/arrayDTW')}, ImageCollection: {SavatskyGolayFilter: require('users/OEEL/lib:/ImageCollection/SavatskyGolayFilter'), fromSingleImage: require('users/OEEL/lib:/ImageCollection/fromSingleImage'), toArrayPerBandWithMask: require('users/OEEL/lib:/ImageCollection/toArrayPerBandWithMask'), medoid: require('users/OEEL/lib:/ImageCollection/medoid'), OtsuThreshold: require('users/OEEL/lib:/ImageCollection/OtsuThreshold'), movingWindow: require('users/OEEL/lib:/ImageCollection/movingWindow'), enhancingCollection: require('users/OEEL/lib:/ImageCollection/enhancingCollection')}, internal: require('users/OEEL/lib:/internal')}

//generated automatically the 2024-10-17 20:01:42.361334UTC 

exports=libs.internal.setupLibrary(libs);

exports.type="Open Earth Engine Library\nRelease date: 2024-10-17 20:01:42\nPlease refer to the online documentation:\nhttps://www.open-geocomputing.org/OEEL"