var libs={FeatureCollection: {fromList: require('./FeatureCollection/fromList')}, Element: {addTimeProperties: require('./Element/addTimeProperties')}, Export: {ImageCollection: {toAsset: require('./Export/ImageCollection/toAsset'), create: require('./Export/ImageCollection/create'), asImageToAsset: require('./Export/ImageCollection/asImageToAsset'), toDrive: require('./Export/ImageCollection/toDrive')}, loadIfExistElseExport: require('./Export/loadIfExistElseExport'), Image: {toAsset: require('./Export/Image/toAsset'), toDrive: require('./Export/Image/toDrive')}}, debug: {Terminal: require('./debug/Terminal')}, ImageCollection: {OtsuThreshold: require('./ImageCollection/OtsuThreshold'), medoid: require('./ImageCollection/medoid'), SavatskyGolayFilter: require('./ImageCollection/SavatskyGolayFilter'), enhancingCollection: require('./ImageCollection/enhancingCollection'), movingWindow: require('./ImageCollection/movingWindow'), fromSingleImage: require('./ImageCollection/fromSingleImage')}, Array: {dtwDistance: require('./Array/dtwDistance'), matrixUnit: require('./Array/matrixUnit')}, Feature: {asLabel: require('./Feature/asLabel')}, Algorithms: {Sentinel2: {cloudfree: require('./Algorithms/Sentinel2/cloudfree')}, MODIS: {terrainShadow: require('./Algorithms/MODIS/terrainShadow')}, Sentinel1: {removeS1BlackBorders: require('./Algorithms/Sentinel1/removeS1BlackBorders')}}, Image: {arrayMatrixUnit: require('./Image/arrayMatrixUnit'), semivariogram: require('./Image/semivariogram'), kriging: require('./Image/kriging'), inverseDistanceInterpolation: require('./Image/inverseDistanceInterpolation')}, plotly: {barChart: require('./plotly/barChart'), histogram: require('./plotly/histogram'), scatter: require('./plotly/scatter'), donutChart: require('./plotly/donutChart'), directDraw: require('./plotly/directDraw'), plot: require('./plotly/plot'), hist2D: require('./plotly/hist2D')}, util: {addTimePrototype: require('./util/addTimePrototype')}, Geometry: {fromText: require('./Geometry/fromText')}, Map: {scaleWidget: require('./Map/scaleWidget'), symbol: require('./Map/symbol'), mapshot: require('./Map/mapshot'), scaleLayer: require('./Map/scaleLayer')}, Filter: {asymmetricMaxDifference: require('./Filter/asymmetricMaxDifference')}, data: {deleteImageCollection: require('./data/deleteImageCollection')}, internal: require('./internal')}

//generated automatically the 2023-06-13 07:26:56.490163UTC 

exports.all=libs.internal.setupLibrary(libs);