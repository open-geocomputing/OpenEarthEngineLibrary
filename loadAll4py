var libs={Geometry: {fromText: require('./Geometry/fromText')}, Image: {semivariogram: require('./Image/semivariogram'), kriging: require('./Image/kriging'), inverseDistanceInterpolation: require('./Image/inverseDistanceInterpolation')}, data: {deleteImageCollection: require('./data/deleteImageCollection')}, Feature: {asLabel: require('./Feature/asLabel')}, Export: {Image: {toDrive: require('./Export/Image/toDrive'), toAsset: require('./Export/Image/toAsset')}, ImageCollection: {asImageToAsset: require('./Export/ImageCollection/asImageToAsset'), create: require('./Export/ImageCollection/create'), toDrive: require('./Export/ImageCollection/toDrive'), toAsset: require('./Export/ImageCollection/toAsset')}, loadIfExistElseExport: require('./Export/loadIfExistElseExport')}, Filter: {asymmetricMaxDifference: require('./Filter/asymmetricMaxDifference')}, FeatureCollection: {fromList: require('./FeatureCollection/fromList')}, debug: {Terminal: require('./debug/Terminal')}, ImageCollection: {movingWindow: require('./ImageCollection/movingWindow'), SavatskyGolayFilter: require('./ImageCollection/SavatskyGolayFilter'), OtsuThreshold: require('./ImageCollection/OtsuThreshold'), enhancingCollection: require('./ImageCollection/enhancingCollection'), medoid: require('./ImageCollection/medoid'), fromSingleImage: require('./ImageCollection/fromSingleImage')}, util: {addTimePrototype: require('./util/addTimePrototype')}, plotly: {plot: require('./plotly/plot'), scatter: require('./plotly/scatter'), directDraw: require('./plotly/directDraw'), hist2D: require('./plotly/hist2D')}, Algorithms: {MODIS: {terrainShadow: require('./Algorithms/MODIS/terrainShadow')}, Sentinel2: {cloudfree: require('./Algorithms/Sentinel2/cloudfree')}, Sentinel1: {removeS1BlackBorders: require('./Algorithms/Sentinel1/removeS1BlackBorders')}}, Element: {addTimeProperties: require('./Element/addTimeProperties')}, Map: {symbol: require('./Map/symbol'), scaleWidget: require('./Map/scaleWidget'), mapshot: require('./Map/mapshot'), scaleLayer: require('./Map/scaleLayer')}, internal: require('./internal')}

//generated automatically the 2023-02-14 18:57:47.658983UTC 

exports.all=libs.internal.setupLibrary(libs);