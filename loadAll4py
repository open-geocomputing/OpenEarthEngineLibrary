var libs={Export: {ImageCollection: {create: require('./Export/ImageCollection/create'), asImageToAsset: require('./Export/ImageCollection/asImageToAsset'), toAsset: require('./Export/ImageCollection/toAsset'), toDrive: require('./Export/ImageCollection/toDrive')}, loadIfExistElseExport: require('./Export/loadIfExistElseExport'), Image: {toAsset: require('./Export/Image/toAsset'), toDrive: require('./Export/Image/toDrive')}}, Element: {addTimeProperties: require('./Element/addTimeProperties')}, Geometry: {fromText: require('./Geometry/fromText')}, data: {deleteImageCollection: require('./data/deleteImageCollection')}, FeatureCollection: {fromList: require('./FeatureCollection/fromList')}, Array: {dtwDistance: require('./Array/dtwDistance'), matrixUnit: require('./Array/matrixUnit')}, Map: {symbol: require('./Map/symbol'), scaleWidget: require('./Map/scaleWidget'), scaleLayer: require('./Map/scaleLayer'), mapshot: require('./Map/mapshot')}, ImageCollection: {SavatskyGolayFilter: require('./ImageCollection/SavatskyGolayFilter'), enhancingCollection: require('./ImageCollection/enhancingCollection'), movingWindow: require('./ImageCollection/movingWindow'), OtsuThreshold: require('./ImageCollection/OtsuThreshold'), medoid: require('./ImageCollection/medoid'), fromSingleImage: require('./ImageCollection/fromSingleImage')}, plotly: {plot: require('./plotly/plot'), hist2D: require('./plotly/hist2D'), histogram: require('./plotly/histogram'), donutChart: require('./plotly/donutChart'), barChart: require('./plotly/barChart'), scatter: require('./plotly/scatter'), directDraw: require('./plotly/directDraw')}, Image: {arrayMatrixUnit: require('./Image/arrayMatrixUnit'), semivariogram: require('./Image/semivariogram'), inverseDistanceInterpolation: require('./Image/inverseDistanceInterpolation'), kriging: require('./Image/kriging'), arrayDTW: require('./Image/arrayDTW')}, Feature: {asLabel: require('./Feature/asLabel')}, Algorithms: {MODIS: {terrainShadow: require('./Algorithms/MODIS/terrainShadow')}, Sentinel2: {cloudfree: require('./Algorithms/Sentinel2/cloudfree')}, Sentinel1: {removeS1BlackBorders: require('./Algorithms/Sentinel1/removeS1BlackBorders')}}, Filter: {asymmetricMaxDifference: require('./Filter/asymmetricMaxDifference')}, util: {addTimePrototype: require('./util/addTimePrototype')}, debug: {Terminal: require('./debug/Terminal')}, internal: require('./internal')}

//generated automatically the 2023-06-15 13:06:18.539952UTC 

exports.all=libs.internal.setupLibrary(libs);